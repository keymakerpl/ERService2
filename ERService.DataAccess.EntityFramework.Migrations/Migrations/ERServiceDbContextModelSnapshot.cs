// <auto-generated />
using System;
using ERService.DataAccess.EntityFramework.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERService.DataAccess.EntityFramework.SqlServer.Migrations
{
    [DbContext(typeof(ERServiceDbContext))]
    partial class ERServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Acl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AclVerbId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AclVerbId");

                    b.HasIndex("RoleId");

                    b.ToTable("ACLs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AclVerbId = 1,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        },
                        new
                        {
                            Id = 2,
                            AclVerbId = 2,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        },
                        new
                        {
                            Id = 3,
                            AclVerbId = 3,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        },
                        new
                        {
                            Id = 4,
                            AclVerbId = 4,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        },
                        new
                        {
                            Id = 5,
                            AclVerbId = 5,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        },
                        new
                        {
                            Id = 6,
                            AclVerbId = 6,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        },
                        new
                        {
                            Id = 7,
                            AclVerbId = 7,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        },
                        new
                        {
                            Id = 8,
                            AclVerbId = 8,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        },
                        new
                        {
                            Id = 9,
                            AclVerbId = 9,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        },
                        new
                        {
                            Id = 10,
                            AclVerbId = 10,
                            RoleId = 1,
                            RowVersion = 0L,
                            Value = 1
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.AclVerb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DefaultValue")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("AclVerbs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultValue = 0,
                            Name = "Dostęp do konfiguracji aplikacji",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 2,
                            DefaultValue = 0,
                            Name = "Dostęp do konfiguracji wydruków",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 3,
                            DefaultValue = 0,
                            Name = "Dostęp do konfiguracji numeracji",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 4,
                            DefaultValue = 0,
                            Name = "Zarządzanie użytkownikami",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 5,
                            DefaultValue = 0,
                            Name = "Dodawanie nowych napraw",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 6,
                            DefaultValue = 0,
                            Name = "Usuwanie napraw",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 7,
                            DefaultValue = 0,
                            Name = "Edytowanie napraw",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 8,
                            DefaultValue = 0,
                            Name = "Dodawanie nowych klientów",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 9,
                            DefaultValue = 0,
                            Name = "Usuwanie klientów",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 10,
                            DefaultValue = 0,
                            Name = "Edytowanie klientów",
                            RowVersion = 0L
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Blob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Checksum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<long>("RowVersion")
                        .HasColumnType("bigint");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Blob");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.CustomItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("HardwareTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HardwareTypeId");

                    b.ToTable("CustomItems");

                    b.HasData(
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 1,
                            Key = "Procesor",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 1,
                            Key = "RAM",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 1,
                            Key = "HDD",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 1,
                            Key = "Grafika",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 1,
                            Key = "Napęd",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 1,
                            Key = "Bateria",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 1,
                            Key = "Zasilacz",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 1,
                            Key = "Stan",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 2,
                            Key = "Procesor",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 2,
                            Key = "RAM",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 2,
                            Key = "HDD",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 2,
                            Key = "Grafika",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 2,
                            Key = "Napęd",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 2,
                            Key = "Bateria",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 2,
                            Key = "Zasilacz",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 2,
                            Key = "Stan",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 7,
                            Key = "Stan",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 7,
                            Key = "Akcesoria",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 8,
                            Key = "Przekątna ekranu",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 8,
                            Key = "Akcesoria",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 8,
                            Key = "Stan",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 9,
                            Key = "Przekątna ekranu",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 9,
                            Key = "Akcesoria",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HardwareTypeId = 9,
                            Key = "Stan",
                            RowVersion = 0L
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddresses");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Hardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HardwareTypeID")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("HardwareTypeID");

                    b.HasIndex("OrderId");

                    b.ToTable("Hardwares");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.HardwareType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("HardwareTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Komputer PC",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Telefon",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drukarka",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Konsola",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nawigacja",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aparat",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monitor",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Telewizor",
                            RowVersion = 0L
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.HwCustomItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomItemId")
                        .HasColumnType("int");

                    b.Property<int>("HardwareId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CustomItemId");

                    b.HasIndex("HardwareId");

                    b.ToTable("HardwareCustomItems");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Numeration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Numeration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "default",
                            Pattern = "[MM][RRRR]",
                            RowVersion = 0L
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Cost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEnded")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("DateTime");

                    b.Property<string>("ExternalNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fault")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.Property<string>("Solution")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("OrderTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Group = 0,
                            Name = "Nowa naprawa",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Group = 0,
                            Name = "W trakcie naprawy",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Group = 0,
                            Name = "Oczekuje na części",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Group = 0,
                            Name = "Naprawa zakończona",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Group = 0,
                            Name = "Naprawa niewykonana",
                            RowVersion = 0L
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.OrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OrderTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gwarancyjna",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Niegwarancyjna",
                            RowVersion = 0L
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pogwarancyjna",
                            RowVersion = 0L
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.PrintTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrintTemplates");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSystem = true,
                            Name = "default",
                            RowVersion = 0L
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "CompanyInfo",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nazwa firmy",
                            Key = "CompanyName",
                            RowVersion = 0L,
                            Value = "Test",
                            ValueType = "System.String"
                        },
                        new
                        {
                            Id = 2,
                            Category = "CompanyInfo",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ulica przy jakiej prowadzona jest działalność",
                            Key = "CompanyStreet",
                            RowVersion = 0L,
                            Value = "",
                            ValueType = "System.String"
                        },
                        new
                        {
                            Id = 3,
                            Category = "CompanyInfo",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Numer budynku",
                            Key = "CompanyNumber",
                            RowVersion = 0L,
                            Value = "",
                            ValueType = "System.String"
                        },
                        new
                        {
                            Id = 4,
                            Category = "CompanyInfo",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Miasto prowadzenia działalności",
                            Key = "CompanyCity",
                            RowVersion = 0L,
                            Value = "",
                            ValueType = "System.String"
                        },
                        new
                        {
                            Id = 5,
                            Category = "CompanyInfo",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kod pocztowy",
                            Key = "CompanyPostCode",
                            RowVersion = 0L,
                            Value = "",
                            ValueType = "System.String"
                        },
                        new
                        {
                            Id = 6,
                            Category = "CompanyInfo",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "NIP",
                            Key = "CompanyNIP",
                            RowVersion = 0L,
                            Value = "",
                            ValueType = "System.String"
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsAdmin = true,
                            IsSystem = true,
                            Login = "administrator",
                            PasswordHash = "TxLVWrN0l5eCTgSgWzu+9DD0hjm9GHUQFke/ixgRhXG5fL6GqohNNRUozIuQnpMQ/AMUgo5O7Sm9XPExBvK5fyULJUVdIMOT/mupzdeDDP6L/5Zlc8IBBOIwXmRszQq7VjPxff6rvMMscS3KCvk7B3LYHZmdkpYWnndqsPwaCmlb8UdUvsZYbfT4ycUr4SqO2lrhVzy5decN8PtlCMKM9dAoYwqKppkN5Bw5Ge9Rt61dCNkefgmWkMMnXJI3mmpTTSOzTPjdIqaSmV4jFnpih6oSPwgTXWjsqGJprpL7y8fztD/hSCjluLGgfXBAsYiqcgDD2gKsmjGqbHVLT+6dcg==",
                            RoleId = 1,
                            RowVersion = 0L,
                            Salt = "h1WROAWPPhJjGE9FWtKit3rolD9Sobb5BDNaO9k+TvBJpEooFM8kIRRyizkrEZ8JGm/zfbncrcePUMKhFXN8tQ=="
                        });
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Acl", b =>
                {
                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.AclVerb", "AclVerb")
                        .WithMany()
                        .HasForeignKey("AclVerbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.Role", null)
                        .WithMany("ACLs")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AclVerb");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Blob", b =>
                {
                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.Order", null)
                        .WithMany("Attachments")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.CustomItem", b =>
                {
                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.HardwareType", "HardwareType")
                        .WithMany()
                        .HasForeignKey("HardwareTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HardwareType");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.CustomerAddress", b =>
                {
                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.Customer", "Customer")
                        .WithMany("CustomerAddresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Hardware", b =>
                {
                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.HardwareType", "HardwareType")
                        .WithMany()
                        .HasForeignKey("HardwareTypeID");

                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.Order", null)
                        .WithMany("Hardwares")
                        .HasForeignKey("OrderId");

                    b.Navigation("HardwareType");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.HwCustomItem", b =>
                {
                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.CustomItem", "CustomItem")
                        .WithMany()
                        .HasForeignKey("CustomItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.Hardware", "Hardware")
                        .WithMany("HardwareCustomItems")
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomItem");

                    b.Navigation("Hardware");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Order", b =>
                {
                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.OrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId");

                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.OrderType", "OrderType")
                        .WithMany()
                        .HasForeignKey("OrderTypeId");

                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Customer");

                    b.Navigation("OrderStatus");

                    b.Navigation("OrderType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.User", b =>
                {
                    b.HasOne("ERService.DataAccess.EntityFramework.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Customer", b =>
                {
                    b.Navigation("CustomerAddresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Hardware", b =>
                {
                    b.Navigation("HardwareCustomItems");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Order", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Hardwares");
                });

            modelBuilder.Entity("ERService.DataAccess.EntityFramework.Entities.Role", b =>
                {
                    b.Navigation("ACLs");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
